/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.valenbiciapi;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;

//import DatosJSon;
/**
 *
 * @author Gabriel
 */
public class ConexionBDD extends javax.swing.JFrame {

    // Declaramos la conexion a mysql
    private static Connection con;
    private static Statement s;
    private static DatosJSON dJSon;
    private static int numEst = 3;
    private static final String driver = "com.mysql.cj.jdbc.Driver";//com.mysql.jdbc.Driver";
    private static final String user = "root";
    private static final String pass = "alumnoalumno";
    private static final String url = "jdbc:mysql://localhost:33306/valenbicibd";

// Función que va a conectarse a mi BDD de mysql
    /**
     * Creates new form ConexionBDD
     */
    public ConexionBDD() {
        initComponents();
        dJSon = new DatosJSON(numEst);
        jTextFieldNumEst.setText("" + numEst);
    }

// Declaramos los datos de conexion a la bd
    public void conector() {
// Añade aquí el código para establecer la conexión con la base de datos
        try {
// Cargar el driver de mysql
            Class.forName(driver);
// Cadena de conexión para conectar con MySQL en localhost,
//seleccionar la base de datos llamada ‘valenbicibd’
// con usuario y contraseña del servidor de MySQL: root y alumnoalumno
            String connectionUrl = "jdbc:mysql://localhost:33306/valenbicibd?user=root&password=alumnoalumno";
// Obtener la conexión
            con = DriverManager.getConnection(connectionUrl);
        } catch (SQLException e) {
            System.out.println("SQL Exception: " + e.toString());
        } catch (ClassNotFoundException cE) {
            System.out.println("Excepción: " + cE.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldNumEst = new javax.swing.JTextField();
        jButtonDatos = new javax.swing.JButton();
        jLabelDatosEstaciones = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDatos = new javax.swing.JTextArea();
        jButtonConectar = new javax.swing.JButton();
        jLabelEstadoConexion = new javax.swing.JLabel();
        jButtonAddBDD = new javax.swing.JButton();
        jLabelAddBDD = new javax.swing.JLabel();
        jButtonCloseConexion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("Introduce el número de estaciones a consultar: ");

        jTextFieldNumEst.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextFieldNumEst.setText("Num. de Estaciones");
        jTextFieldNumEst.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldNumEstFocusLost(evt);
            }
        });
        jTextFieldNumEst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNumEstActionPerformed(evt);
            }
        });

        jButtonDatos.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonDatos.setText("DATOS");
        jButtonDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonDatosMouseClicked(evt);
            }
        });

        jLabelDatosEstaciones.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabelDatosEstaciones.setText("Obtener datos de estaciones");

        jTextAreaDatos.setColumns(20);
        jTextAreaDatos.setRows(5);
        jScrollPane1.setViewportView(jTextAreaDatos);

        jButtonConectar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonConectar.setText("CONECTAR");
        jButtonConectar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonConectarMouseClicked(evt);
            }
        });
        jButtonConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConectarActionPerformed(evt);
            }
        });

        jLabelEstadoConexion.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelEstadoConexion.setText("Estado de Conexión");

        jButtonAddBDD.setText("Añadir a BDD");
        jButtonAddBDD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAddBDDMouseClicked(evt);
            }
        });

        jLabelAddBDD.setText("Primero Obtener Datos de Estaciones y Conectar con BDD");

        jButtonCloseConexion.setText("Cerrar Conexión");
        jButtonCloseConexion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCloseConexionMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(76, 76, 76)
                                .addComponent(jTextFieldNumEst, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButtonConectar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonDatos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButtonAddBDD, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAddBDD)
                            .addComponent(jLabelDatosEstaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelEstadoConexion)
                            .addComponent(jButtonCloseConexion))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNumEst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDatos)
                    .addComponent(jLabelDatosEstaciones))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConectar)
                    .addComponent(jLabelEstadoConexion))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddBDD)
                    .addComponent(jLabelAddBDD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jButtonCloseConexion)
                .addGap(24, 24, 24))
        );

        jTextFieldNumEst.getAccessibleContext().setAccessibleName("");
        jTextFieldNumEst.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNumEstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNumEstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNumEstActionPerformed

    private void jButtonConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConectarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonConectarActionPerformed

    private void jButtonDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDatosMouseClicked
        // TODO add your handling code here:
        dJSon.mostrarDatos(numEst);
        jLabelDatosEstaciones.setText("Datos de estaciones:");
        jTextAreaDatos.setText(dJSon.getDatos());
    }//GEN-LAST:event_jButtonDatosMouseClicked

    private void jButtonConectarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConectarMouseClicked
        // TODO add your handling code here:
        try {
            conector();
            jButtonAddBDD.setEnabled(true);
            jLabelEstadoConexion.setText("Conexión Establecida");
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButtonConectarMouseClicked

    private void jButtonAddBDDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAddBDDMouseClicked
        // TODO add your handling code here:
        try {
            String estaciones[] = dJSon.getValues();

            for (String estacion : estaciones) {
                // Dividir por el separador " | "
                String[] partes = estacion.split(" \\| ");

                // Extraer valores individuales
                String numero = partes[0].replace("Número: ", "");
                String direccion = partes[1].replace("Direccion: ", "");
                String disponibles = partes[2].replace("Disponibles: ", "");
                String libres = partes[3].replace("Libres: ", "");
                String operativo = partes[4].replace("Operativo: ", "");

                // Coordenadas 
                String[] coordenadas = partes[5].replace("Coordenadas: [", "").replace("]", "").split(",");
                String punto = "POINT(" + coordenadas[0].trim() + " " + coordenadas[1].trim() + ")";

                System.out.println("Número: " + numero);
                System.out.println("Direccion: " + direccion);
                System.out.println("Disponibles: " + disponibles);
                System.out.println("Libres: " + libres);
                System.out.println("Operativo: " + operativo);
                System.out.println("Coordenadas: " + punto);

                String sql = "INSERT INTO historico (estacion_id, direccion, bicis_disponibles, "
                        + "anclajes_libres, estado_operativo, ubicación) "
                        + "VALUES (?, ?, ?, ?, ?, ST_GeomFromText(?))";

                PreparedStatement pstmt = con.prepareStatement(sql);

                pstmt.setInt(1, Integer.parseInt(numero));
                pstmt.setString(2, direccion);
                pstmt.setInt(3, Integer.parseInt(disponibles));
                pstmt.setInt(4, Integer.parseInt(libres));
                pstmt.setBoolean(5, Boolean.parseBoolean(operativo));
                pstmt.setString(6, punto);

                int filasAfectadas = pstmt.executeUpdate();
                System.out.println(filasAfectadas + " registros insertados");

            }

            //System.out.println(Arrays.toString(estaciones));
            //System.out.println(Arrays.toString(dJSon.getValues()));
            jLabelAddBDD.setText("Datos introducidos correctamente.");

        } // Si la conexion NO fue exitosa mostramos un mensaje de error
        catch (SQLException e) {
            jLabelAddBDD.setText("Error de conexion" + e);
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonAddBDDMouseClicked

    private void jButtonCloseConexionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCloseConexionMouseClicked
        // TODO add your handling code here:
        try {
            // TODO Añade aquí el código para cerrar la conexión con la Base de Datos
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(ConexionBDD.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonCloseConexionMouseClicked

    private void jTextFieldNumEstFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNumEstFocusLost
        // TODO add your handling code here:
        numEst = Integer.parseInt(jTextFieldNumEst.getText());
        dJSon.mostrarDatos(numEst);
        jLabelDatosEstaciones.setText("Datos estaciones:");
        jTextAreaDatos.setText(dJSon.getDatos());
    }//GEN-LAST:event_jTextFieldNumEstFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConexionBDD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConexionBDD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConexionBDD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConexionBDD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConexionBDD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddBDD;
    private javax.swing.JButton jButtonCloseConexion;
    private javax.swing.JButton jButtonConectar;
    private javax.swing.JButton jButtonDatos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelAddBDD;
    private javax.swing.JLabel jLabelDatosEstaciones;
    private javax.swing.JLabel jLabelEstadoConexion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaDatos;
    private javax.swing.JTextField jTextFieldNumEst;
    // End of variables declaration//GEN-END:variables
}
